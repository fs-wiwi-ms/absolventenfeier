= if @user.role == :admin do
  div.columns
    div.column(align="right")
      a.button.is-primary(href="#{event_path(@conn, :new)}")
        span.icon.has-text-info
          i.fas.fa-plus
        span = gettext("Create event")

= if !@events or Enum.empty?(@events) do
  div.subtitle
    span = gettext("Keine zukünftigen Absolventenfeiern gefunden. Auf unseren Kanälen (")
    a(href="https://fachschaft-wiwi.ms") = gettext("Homepage")
    span ,
    a(href="https://www.facebook.com/fachschaftwiwi.ms/") = gettext("Facebook")
    span ,
    a(href="https://www.instagram.com/fachschaft.wiwi.ms/") = gettext("Instagram")
    span = gettext(") wirst du über neue Events informiert.")
- else
  = for event <- @events do
    article.message(class="#{if event.published do "is-info" else "is-link" end}")
      div.message-header
        p.title.is-5(style="margin-bottom:0") = "#{gettext("Graduation Ceremony")} #{if event.term.type == :winter_term do gettext("WT") else gettext("ST") end} #{event.term.year} #{event.suffix} - #{Timex.format!(event.date_of_event, "{0D}.{0M}.{YYYY}")}"
        = if @user.role == :admin do
          div.field.is-grouped
            p.control
              button.button.is-primary
                a.icon.has-text-info(href="#{event_path(@conn, :edit, event.id)}" data-tooltip="#{gettext("Edit event")}")
                  i.fas.fa-pen
            p.control
              button.button.is-primary
                = if event.published do
                  a.icon.has-text-info(href="#{event_path(@conn, :make_private, event.id)}" data-tooltip="#{gettext("Make private")}")
                    i.fas.fa-ban
                - else
                  a.icon.has-text-info(href="#{event_path(@conn, :publish, event.id)}" data-tooltip="#{gettext("Publish event")}")
                    i.fa.fa-globe-europe
            = if !event.published do
              p.control
                button.button.is-primary
                  a.icon.has-text-info(href="#{event_path(@conn, :archive, event.id)}" data-tooltip="#{gettext("Archive event")}")
                    i.fa.fa-archive
            p.control
              button.button.is-primary
                a.icon.has-text-info(href="#{event_registration_path(@conn, :index, event.id)}" data-tooltip="#{gettext("Show registrations")}")
                  i.fas.fa-table

      div.message-body
        = render "_steps.html", assigns |> Map.put(:event, event) |> Map.put(:user, @user)

        = case get_event_state(event) do
          - :registration_open ->
            p.title.is-6 = gettext("Registration phase")
            div.columns
              div.column
                = if user_registerd_for_event(event, @user) do
                  div.tags.has-addons
                    span.tag.is-light
                      span.icon
                          i.fas.fa-check
                    span.tag.is-success = gettext("Already registered")
                - else
                  div.tags.has-addons
                    span.tag.is-light
                      span.icon
                        i.fas.fa-exclamation
                    span.tag.is-danger = gettext("Not registered yet")


              div.column(align="right")
                = case user_registerd_for_event(event, @user) do
                  - %Registration{} = registration ->
                    = form_for @conn, registration_path(@conn, :delete, registration.id), [method: :delete], fn _form ->
                      button.button.is-danger.is-outlined(type="submit")
                        span.icon
                          i.fas.fa-times
                        span = gettext("Deregister")

                  - nil ->
                    a.button.is-primary.is-outlined(href="#{event_registration_path(@conn, :new, event.id)}")
                      span.icon
                        i.fas.fa-file-signature
                      span = gettext("Register now")
          - :ticketing_open ->
            = case user_registerd_for_event(event, @user) do
                - %Registration{} = registration ->
                  p.title.is-6 = gettext("Ticketing phase")
                  div.columns
                    div.column
                      span = gettext("With the following voucher codes you can order the specified tickets in our ticketshop. Please click the 'Order now' button to be redirected to the shop.")
                  div.columns
                    div.column
                      = for voucher <- get_vouchers_for_registration(registration) do
                          div.field.is-horizontal
                            div.field-label.is-normal
                              label.label = voucher.ticket.name
                            div.field-body
                              div.field
                                p.control.has-icons-left
                                  input.input(type="text" value="#{voucher.code}" readonly="true")
                                  span.icon.is-small.is-left
                                    i.fas.fa-ticket-alt
                                p.help = gettext("You can order a maximum of %{count} ticket(s) of this type.", count: voucher.ticket.max_per_user)

                      a.button.is-primary.is-outlined(href="#{pretix_host()}/absolventenfeier/#{event.pretix_event_slug}" target="_blank")
                        span.icon
                          i.fas.fa-shopping-cart
                        span = gettext("Order now")

                  div.columns
                    div.column
                      span.has-text-danger = gettext("If you would like to redeem an MLP gift card, please send an email with your gift card code and your request to admin@fachschaft-wiwi.ms beforehand. We have to match the gift card code and transfer it to the ticket system so that it can be used. We cannot enter gift card codes into our system after you have placed your order!")

                - nil ->
          - _ ->
