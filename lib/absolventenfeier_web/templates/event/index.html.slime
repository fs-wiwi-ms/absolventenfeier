= if @user.role == :admin do
  div.columns
    div.column(align="right")
      a.button.is-primary(href="#{event_path(@conn, :new)}")
        span.icon.has-text-info
          i.fas.fa-plus
        span = gettext("Create event")

= if !@events or Enum.empty?(@events) do
  div.subtitle
    span = gettext("Keine zukünftigen Absolventenfeiern gefunden. Auf unseren Kanälen (")
    a(href="https://fachschaft-wiwi.ms") = gettext("Homepage")
    span ,
    a(href="https://www.facebook.com/fachschaftwiwi.ms/") = gettext("Facebook")
    span ,
    a(href="https://www.instagram.com/fachschaft.wiwi.ms/") = gettext("Instagram")
    span = gettext(") wirst du über neue Events informiert.")
- else
  = for event <- @events do
    article.message(class="#{if event.published do "is-info" else "is-link" end}")
      div.message-header
        p.title.is-5(style="margin-bottom:0") = "#{gettext("Graduation Ceremony")} #{if event.term.type == :winter_term do gettext("WT") else gettext("ST") end} #{event.term.year}"
        = if @user.role == :admin do
          div.field.is-grouped
            p.control
              button.button.is-primary
                a.icon.has-text-info(href="#{event_path(@conn, :edit, event.id)}" data-tooltip="#{gettext("Edit event")}")
                  i.fas.fa-pen
            p.control
              button.button.is-primary
                = if event.published do
                  a.icon.has-text-info(href="#{event_path(@conn, :make_private, event.id)}" data-tooltip="#{gettext("Make private")}")
                    i.fas.fa-ban
                - else
                  a.icon.has-text-info(href="#{event_path(@conn, :publish, event.id)}" data-tooltip="#{gettext("Publish event")}")
                    i.fa.fa-globe-europe
            = if !event.published do
              p.control
                button.button.is-primary
                  a.icon.has-text-info(href="#{event_path(@conn, :archive, event.id)}" data-tooltip="#{gettext("Archive event")}")
                    i.fa.fa-archive
            p.control
              button.button.is-primary
                a.icon.has-text-info(href="#{event_registration_path(@conn, :index, event.id)}" data-tooltip="#{gettext("Show registrations")}")
                  i.fas.fa-table
            / = form_for @conn, event_path(@conn, :delete, event.id), fn _f ->
            /   input type="hidden" name="_method" value="delete"
            /   p.control
            /     button.button.is-danger
            /       span.icon.has-text-white(data-method="post" data-tooltip="#{gettext("Delete event")}" href="#")
            /         i.fas.fa-trash


      div.message-body
        p.title.is-6 = gettext("Date of event")
        p.subtitle.is-6 = Timex.format!(event.date_of_event, "{0D}.{0M}.{YYYY}")
        div.is-divider(style="margin: 0.5rem 0;")
        div.columns(style="margin-bottom: 0;")
          div.column
              p.title.is-6 = gettext("Registration phase")
              = if user_registerd_for_event(event, @user) do
                div.tags.has-addons
                  span.tag.is-light
                    span.icon
                        i.fas.fa-check
                  span.tag.is-success = gettext("Already registered")
              - else
                div.tags.has-addons
                  span.tag.is-light
                    span.icon
                      i.fas.fa-exclamation
                  span.tag.is-danger = gettext("Not registered yet")
              p.is-size-6
                span = gettext("Start")
                span :
                span = Timex.format!(Timex.Timezone.convert(event.start_of_registration, "CET"), "{0D}.{0M}.{YYYY} {h24}:{m}")
              p.is-size-6
                span = gettext("End")
                span :
                span = Timex.format!(Timex.Timezone.convert(event.date_of_registration, "CET"), "{0D}.{0M}.{YYYY} {h24}:{m}")
          div.column(align="right")
              = case user_registerd_for_event(event, @user) do
                - %Registration{} = registration ->
                  = form_for @conn, registration_path(@conn, :delete, registration.id), [method: :delete], fn _form ->
                    button.button.is-danger.is-outlined(type="submit")
                      span.icon
                        i.fas.fa-times
                      span = gettext("Deregister")

                - nil ->
                  a.button.is-primary.is-outlined(href="#{event_registration_path(@conn, :new, event.id)}")
                    span.icon
                      i.fas.fa-file-signature
                    span = gettext("Register now")
        div.is-divider(style="margin: 0.5rem 0;")
        div.columns(style="margin-bottom: 0;")
          div.column
            p.title.is-6 = gettext("Ticketing phase")
            = case user_ordered_for_event(event, @user) do
              - %Order{} = order ->
                div.tags.has-addons
                  = case get_payment_status_for_order(order) do
                    - n when n in [:open] ->
                      span.tag.is-light.has-tooltip-multiline(data-tooltip="#{gettext("We are waiting for the confirmation of your payment from our payment provider.")}")
                        span.icon
                          i.fas.fa-hourglass-half
                      span.tag.is-warning = gettext("Pending")
                    - n when n in [:open, :paid] ->
                      span.tag.is-light
                        span.icon
                          i.fas.fa-check
                      span.tag.is-success = gettext("Paid")
                      = case order.payment.method do
                        - "paypal" ->
                          span.icon(data-tooltip="#{gettext("Paid with PayPal.")}")
                            i.fab.fa-cc-paypal

                        - n when n in ["creditcard", "debitcard"] ->
                          span.icon(data-tooltip="#{gettext("Paid with credit card.")}")
                            i.fas.fa-credit-card

                        - "banktransfer" ->
                          span.icon(data-tooltip="#{gettext("Paid with bank transfer.")}")
                            i.fas.fa-money-check

                        - "sofort" ->
                          span.tag.is-light(data-tooltip="#{gettext("Paid with Sofort Banking.")}") Sofort

                        - nil ->
                    - n when n in [:error] ->
                      span.tag.is-light
                        span.icon
                          i.fas.fa-exclamation
                      span.tag.is-error = gettext("Error")
                    - :none ->
                      span.tag.is-light
                        span.icon
                          i.fas.fa-check
                      span.tag.is-success = gettext("Order successfull")
              - nil ->
                div.tags.has-addons
                  span.tag.is-light
                    span.icon
                      i.fas.fa-exclamation
                  span.tag.is-danger = gettext("Not ordered yet")
            p.is-size-6
              span = gettext("Start")
              span :
              span = Timex.format!(Timex.Timezone.convert(event.start_of_tickets, "CET"), "{0D}.{0M}.{YYYY} {h24}:{m}")
            p.is-size-6
              span = gettext("End")
              span :
              span = Timex.format!(Timex.Timezone.convert(event.date_of_tickets, "CET"), "{0D}.{0M}.{YYYY} {h24}:{m}")
          div.column(align="right")
            = case user_ordered_for_event(event, @user) do
              - %Order{} = order ->
                = case get_payment_status_for_order(order) do
                    - :none ->
                      = form_for @conn, order_path(@conn, :delete, order.id), [method: :delete], fn _form ->
                        a.button.is-primary.is-outlined(href="#{order_path(@conn, :edit, order.id)}")
                          span.icon
                            i.fas.fa-pen
                          span = gettext("Change order")
                        button.button.is-danger.is-outlined(type="submit")
                          span.icon
                            i.fas.fa-times
                          span = gettext("Delete order")
                        / a.button.is-primary.is-outlined(href="#{order_payment_path(@conn, :new, order.id)}")
                        /   span.icon
                        /     i.fas.fa-money-bill
                        /   span = gettext("Pay now!")
                    - n when n in [:open, :paid] ->
                    - n when n in [:error] ->
              - nil ->
                a.button.is-primary.is-outlined(href="#{event_order_path(@conn, :new, event.id)}")
                  span.icon
                    i.fas.fa-ticket-alt
                  span = gettext("Order now")
